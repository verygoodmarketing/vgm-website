---
import { getEntry, getCollection } from 'astro:content';
import MainLayout from '../layouts/MainLayout.astro';
import { Image } from 'astro:assets';

// Fetch the page content
const page = await getEntry('pages', 'resources');

if (!page) {
  throw new Error('Page not found');
}

const { Content } = await page.render();

// Extract all SEO properties from the content entry
const {
  title,
  description,
  canonicalUrl,
  ogImage,
  ogType,
  twitterCard,
  metaRobots,
  keywords,
  author,
  updatedDate,
  metadata,
} = page.data;

// Get featured articles
const allArticles = await getCollection('articles');
const featuredArticles = allArticles
  .filter((article) => article.data.featured)
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

// Function to format date
function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
}
---

<MainLayout
  {title}
  {description}
  {canonicalUrl}
  {ogImage}
  {ogType}
  {twitterCard}
  {metaRobots}
  {keywords}
  {author}
>
  <section class="bg-white py-16">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <Content />

      <!-- Featured Articles Section -->
      <div class="mt-12">
        <h2 class="mb-8 text-2xl font-bold text-gray-800">Featured Resources</h2>

        <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
          {
            featuredArticles.map((article) => (
              <div class="overflow-hidden rounded-lg shadow-md transition duration-300 hover:shadow-lg">
                <a href={`/articles/${article.slug}`} class="block">
                  <div class="relative h-48 w-full bg-gray-200">
                    {article.data.image ? (
                      <img
                        src={article.data.image}
                        alt={article.data.title}
                        class="h-full w-full object-cover"
                      />
                    ) : (
                      <div class="flex h-full w-full items-center justify-center bg-blue-50 text-blue-500">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          class="h-16 w-16"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="1"
                            d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
                          />
                        </svg>
                      </div>
                    )}
                  </div>
                  <div class="p-6">
                    <div class="mb-2 text-sm text-blue-600">
                      {article.data.categories && article.data.categories.join(' • ')}
                    </div>
                    <h3 class="mb-2 text-xl font-bold text-gray-900">{article.data.title}</h3>
                    <p class="mb-4 text-gray-600">{article.data.description}</p>
                    <div class="flex items-center justify-between">
                      <span class="text-sm text-gray-500">
                        {formatDate(article.data.publishDate)}
                      </span>
                      <span class="text-sm font-medium text-blue-600">Read More →</span>
                    </div>
                  </div>
                </a>
              </div>
            ))
          }
        </div>

        <div class="mt-10 text-center">
          <a
            href="/articles"
            class="rounded bg-blue-600 px-6 py-3 font-medium text-white hover:bg-blue-700"
          >
            View All Resources
          </a>
        </div>
      </div>

      <div class="mt-10 text-sm text-gray-600">
        Last updated: {updatedDate.toLocaleDateString()}
        {metadata && <p>Author: {metadata.author}</p>}
      </div>
    </div>
  </section>
</MainLayout>
