---
import { getCollection } from 'astro:content';
import MainLayout from '../../../layouts/MainLayout.astro';

// Generate paths for all categories
export async function getStaticPaths() {
  const articles = await getCollection('articles');
  const categories = [...new Set(articles.flatMap((article) => article.data.categories || []))];

  return categories.map((category) => ({
    params: { category: category.toLowerCase() },
    props: { categoryName: category },
  }));
}

// Get the category and all articles in that category
const { category } = Astro.params;
const { categoryName } = Astro.props;

const allArticles = await getCollection('articles');
const categoryArticles = allArticles
  .filter((article) =>
    article.data.categories?.some((cat) => cat.toLowerCase() === category.toLowerCase())
  )
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

// Function to format date
function formatDate(date: Date): string {
  return new Intl.DateTimeFormat('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  }).format(date);
}

// Get all categories for the filter
const allCategories = [
  ...new Set(allArticles.flatMap((article) => article.data.categories || [])),
].sort();

// SEO metadata
const title = `${categoryName} Articles & Resources`;
const description = `Explore our ${categoryName} marketing articles, guides, and insights to help grow your business`;
---

<MainLayout {title} {description} ogType="website" twitterCard="summary_large_image">
  <section class="bg-white py-16">
    <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
      <h1 class="mb-2 text-center text-4xl font-bold text-gray-900">{categoryName} Resources</h1>
      <p class="mx-auto mb-10 max-w-3xl text-center text-lg text-gray-600">
        Explore our collection of {categoryName.toLowerCase()} marketing resources and articles
      </p>

      <!-- Categories Filter -->
      <div class="mb-10">
        <div class="flex flex-wrap items-center justify-center gap-2">
          <a
            href="/articles"
            class="rounded-full bg-gray-100 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-200"
            >All</a
          >

          {
            allCategories.map((cat) => (
              <a
                href={`/articles/category/${cat.toLowerCase()}`}
                class={`rounded-full px-4 py-2 text-sm font-medium ${
                  cat.toLowerCase() === category.toLowerCase()
                    ? 'bg-blue-600 text-white hover:bg-blue-700'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {cat}
              </a>
            ))
          }
        </div>
      </div>

      <!-- Articles List -->
      {
        categoryArticles.length > 0 ? (
          <div class="grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3">
            {categoryArticles.map((article) => (
              <div class="overflow-hidden rounded-lg shadow-md transition duration-300 hover:shadow-lg">
                <a href={`/articles/${article.slug}`} class="block">
                  <div class="relative h-48 w-full bg-gray-200">
                    {article.data.image ? (
                      <img
                        src={article.data.image}
                        alt={article.data.title}
                        class="h-full w-full object-cover"
                      />
                    ) : (
                      <div class="flex h-full w-full items-center justify-center bg-blue-50 text-blue-500">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          class="h-16 w-16"
                          fill="none"
                          viewBox="0 0 24 24"
                          stroke="currentColor"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="1"
                            d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z"
                          />
                        </svg>
                      </div>
                    )}
                    {article.data.featured && (
                      <span class="absolute top-0 left-0 bg-yellow-500 px-3 py-1 text-xs font-semibold text-white">
                        Featured
                      </span>
                    )}
                  </div>
                  <div class="p-6">
                    <div class="mb-2 flex gap-2 text-sm text-blue-600">
                      {article.data.categories &&
                        article.data.categories.map((cat) => <span>{cat}</span>)}
                    </div>
                    <h2 class="mb-2 text-xl font-bold text-gray-900">{article.data.title}</h2>
                    <p class="mb-4 line-clamp-3 text-gray-600">{article.data.description}</p>
                    <div class="flex items-center justify-between">
                      <span class="text-sm text-gray-500">
                        {formatDate(article.data.publishDate)}
                      </span>
                      <span class="text-sm font-medium text-blue-600">Read More â†’</span>
                    </div>
                  </div>
                </a>
              </div>
            ))}
          </div>
        ) : (
          <div class="mx-auto max-w-md rounded-lg bg-gray-50 p-8 text-center">
            <h2 class="mb-3 text-xl font-medium text-gray-700">No articles found</h2>
            <p class="text-gray-600">
              We couldn't find any articles in this category. Please check back later or explore
              other categories.
            </p>
            <a href="/articles" class="mt-4 inline-block text-blue-600 hover:underline">
              View all articles
            </a>
          </div>
        )
      }
    </div>
  </section>
</MainLayout>
